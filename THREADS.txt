// create a thread
pthread_create
// QT equivalent is making a QThread object, and then calling start on it

// obtain own thread
pthread_self
// QT equivalent is QThread::currentThread()

// exit the current thread
pthread_exit
// QT equivalent is calling exit on the thread, possibly with currentThread()

// wait for a thread to finish
pthread_join
// QT equivalent is calling wait() on the thread




// condition variables
pthread_cond_t
pthread_cond_init
// QT equivalent is QWaitCondition

// wait for a condition to happen
pthread_cond_wait
// QT equivalent is the wait() method of QWaitCondition

// broadcast that a condition has occurred
pthread_cond_broadcast
// QT equivalent is the wakeAll() method of QWaitCondition





// regular mutexes
pthread_mutex_t
pthread_mutex_init
// QT equivalent is QMutex

// lock a mutex
pthread_mutex_lock
// QT equivalent is the lock() method of QMutex

pthread_mutex_unlock
// QT equivalent is the unlock() method of QMutex





// read write locks
pthread_rwlock_t
pthread_rwlock_init
pthread_rwlock_destroy
// QT equivalent is QReadWriteLock

// register reading thread
pthread_rwlock_rdlock
// QT equivalent is lockForRead() method of QReadWriteLock

// unlock the rw lock
pthread_rwlock_unlock
// QT equivalent is lockForWrite() method of QReadWriteLock

// register writing thread
pthread_rwlock_wrlock
// QT equivalent is lockForWrite() method of QReadWriteLock


